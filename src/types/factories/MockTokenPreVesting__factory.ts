/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockTokenPreVesting,
  MockTokenPreVestingInterface,
} from "../MockTokenPreVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Revoked",
    type: "event",
  },
  {
    inputs: [],
    name: "allIncomingDepositsFinalised",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "computeNextVestingScheduleIdForHolder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "computeReleasableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "computeVestingScheduleIdForAddressAndIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cliff",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slicePeriodSeconds",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_revocable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tge",
        type: "uint256",
      },
    ],
    name: "createVestingSchedule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_beneficiaries",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_cliffs",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_durations",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_slicePeriodSeconds",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "_revocables",
        type: "bool[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_tges",
        type: "uint256[]",
      },
    ],
    name: "createVestingSchedule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "getLastVestingScheduleForHolder",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "tge",
            type: "uint256",
          },
        ],
        internalType: "struct TokenPreVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getVestingIdAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "getVestingSchedule",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "tge",
            type: "uint256",
          },
        ],
        internalType: "struct TokenPreVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getVestingScheduleByAddressAndIndex",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cliff",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "tge",
            type: "uint256",
          },
        ],
        internalType: "struct TokenPreVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVestingSchedulesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "getVestingSchedulesCountByBeneficiary",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVestingSchedulesTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWithdrawableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "setCurrentTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timePeriodInSeconds",
        type: "uint256",
      },
    ],
    name: "setTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timestampSet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526000600a553480156200001657600080fd5b506040516200250e3803806200250e83398101604081905262000039916200011a565b806200004533620000ca565b600180556001600160a01b038116620000b35760405162461bcd60e51b815260206004820152602660248201527f546f6b656e50726556657374696e673a20746f6b656e2061646472657373206960448201526573207a65726f60d01b606482015260840160405180910390fd5b426002556001600160a01b0316608052506200014c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200012d57600080fd5b81516001600160a01b03811681146200014557600080fd5b9392505050565b6080516123916200017d600039600081816101d70152818161062401528181610e69015261106001526123916000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80638da5cb5b116100f9578063d1f3c24d11610097578063f2fde38b11610071578063f2fde38b146103c7578063f51321d7146103da578063f7c469f0146103ed578063f9079b371461045557600080fd5b8063d1f3c24d14610398578063d6d14171146103ab578063ea1bb3d5146103b457600080fd5b80639ef346b4116100d35780639ef346b414610356578063a0a2b57314610369578063b75c7dc61461037c578063be9a65551461038f57600080fd5b80638da5cb5b1461033057806390be10cc146103415780639b69279a1461034957600080fd5b8063530ff4e51161016657806366afd8ef1161014057806366afd8ef146102a0578063715018a6146102b35780637e913dc6146102bb5780638af104da146102db57600080fd5b8063530ff4e51461024757806355ce38661461025a5780635a7bb69a1461027757600080fd5b806329cb924d1161019757806329cb924d146102245780632e1a7d4d1461022c57806348deb4711461023f57600080fd5b806313083617146101be57806321df0da7146101d557806322f8e5661461020f575b600080fd5b6006545b6040519081526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101cc565b61022261021d366004611e00565b600a55565b005b600a546101c2565b61022261023a366004611e00565b610468565b6008546101c2565b610222610255366004611e43565b610652565b6005546102679060ff1681565b60405190151581526020016101cc565b6101c2610285366004611ea9565b6001600160a01b031660009081526009602052604090205490565b6102226102ae366004611ec4565b610bad565b610222610e9e565b6102ce6102c9366004611ea9565b610f04565b6040516101cc9190611ee6565b6101c26102e9366004611f77565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b6000546001600160a01b03166101f7565b6101c2611039565b6003546102679060ff1681565b6102ce610364366004611e00565b6110e5565b610222610377366004611e00565b6111e9565b61022261038a366004611e00565b6112d4565b6101c260045481565b6102226103a6366004612093565b6114e8565b6101c260025481565b6101c26103c2366004611e00565b6116f0565b6102226103d5366004611ea9565b6117dd565b6102ce6103e8366004611f77565b6118bf565b6101c26103fb366004611ea9565b6001600160a01b0381166000908152600960209081526040808320548151606086901b6bffffffffffffffffffffffff19168185015260348082019290925282518082039092018252605401909152805191012092915050565b6101c2610463366004611e00565b611974565b600260015414156104c05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001556000546001600160a01b0316331461051f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b7565b80306001600160a01b03166390be10cc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561055957600080fd5b505afa15801561056d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059191906121fb565b10156106055760405162461bcd60e51b815260206004820152602e60248201527f546f6b656e50726556657374696e673a206e6f7420656e6f756768207769746860448201527f6472617761626c652066756e647300000000000000000000000000000000000060648201526084016104b7565b61064b61061a6000546001600160a01b031690565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690836119fe565b5060018055565b60055460ff16156106b45760405162461bcd60e51b815260206004820152602660248201527f496e636f6d696e67206465706f736974732068617665206265656e2066696e616044820152653634b9b2b21760d11b60648201526084016104b7565b6000546001600160a01b0316331461070e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b7565b81306001600160a01b03166390be10cc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078091906121fb565b101561081a5760405162461bcd60e51b815260206004820152604d60248201527f546f6b656e50726556657374696e673a2063616e6e6f7420637265617465207660448201527f657374696e67207363686564756c652062656361757365206e6f74207375666660648201527f696369656e7420746f6b656e7300000000000000000000000000000000000000608482015260a4016104b7565b600085116108905760405162461bcd60e51b815260206004820152602560248201527f546f6b656e50726556657374696e673a206475726174696f6e206d757374206260448201527f65203e203000000000000000000000000000000000000000000000000000000060648201526084016104b7565b600082116108ec5760405162461bcd60e51b815260206004820152602360248201527f546f6b656e50726556657374696e673a20616d6f756e74206d7573742062652060448201526203e20360ec1b60648201526084016104b7565b60018410156109635760405162461bcd60e51b815260206004820152603060248201527f546f6b656e50726556657374696e673a20736c696365506572696f645365636f60448201527f6e6473206d757374206265203e3d20310000000000000000000000000000000060648201526084016104b7565b604051630f7c469f60e41b81526001600160a01b0388166004820152600090309063f7c469f09060240160206040518083038186803b1580156109a557600080fd5b505afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd91906121fb565b9050604051806101400160405280600115158152602001896001600160a01b03168152602001888152602001878152602001868152602001851515815260200184815260200160008152602001600015158152602001838152506007600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010155606082015181600201556080820151816003015560a08201518160040160006101000a81548160ff02191690831515021790555060c0820151816005015560e082015181600601556101008201518160070160006101000a81548160ff0219169083151502179055506101208201518160080155905050610b2d83600854611a6a90919063ffffffff16565b6008556006805460018181019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018290556001600160a01b03891660009081526009602052604090205490610b86908290611a6a565b6001600160a01b039099166000908152600960205260409020989098555050505050505050565b60026001541415610c005760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104b7565b60026001908155600083815260076020526040902054839160ff909116151514610c2957600080fd5b6000818152600760208190526040909120015460ff1615610c4957600080fd5b6000838152600760205260408120805491549091336001600160a01b03610100909204821681149291909116148180610c7f5750805b610d175760405162461bcd60e51b815260206004820152604560248201527f546f6b656e50726556657374696e673a206f6e6c792062656e6566696369617260448201527f7920616e64206f776e65722063616e2072656c6561736520766573746564207460648201527f6f6b656e73000000000000000000000000000000000000000000000000000000608482015260a4016104b7565b6040805161014081018252845460ff808216151583526001600160a01b0361010092839004166020840152600187015493830193909352600286015460608301526003860154608083015260048601548316151560a0830152600586015460c0830152600686015460e083015260078601549092161515918101919091526008840154610120820152600090610dac90611a76565b905085811015610e26576040805162461bcd60e51b81526020600482015260248101919091527f546f6b656e50726556657374696e673a2063616e6e6f742072656c656173652060448201527f746f6b656e732c206e6f7420656e6f7567682076657374656420746f6b656e7360648201526084016104b7565b6006840154610e359087611a6a565b600685015583546008546101009091046001600160a01b031690610e599088611b84565b600855610e906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682896119fe565b505060018055505050505050565b6000546001600160a01b03163314610ef85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b7565b610f026000611b90565b565b610f6960405180610140016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600015158152602001600081525090565b6001600160a01b03821660009081526009602052604081205460079190610f989085906102e99060019061222a565b81526020808201929092526040908101600020815161014081018352815460ff808216151583526001600160a01b03610100928390041695830195909552600183015493820193909352600282015460608201526003820154608082015260048201548416151560a0820152600582015460c0820152600682015460e082015260078201549093161515918301919091526008015461012082015292915050565b6008546040516370a0823160e01b81523060048201526000916110e0916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b1580156110a257600080fd5b505afa1580156110b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110da91906121fb565b90611b84565b905090565b61114a60405180610140016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600015158152602001600081525090565b50600090815260076020818152604092839020835161014081018552815460ff808216151583526001600160a01b03610100928390041694830194909452600183015495820195909552600282015460608201526003820154608082015260048201548316151560a0820152600582015460c0820152600682015460e08201529281015490911615159282019290925260089091015461012082015290565b6000546001600160a01b031633146112435760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b7565b60035460ff16156112a15760405162461bcd60e51b815260206004820152602260248201527f546f6b656e50726556657374696e673a20616c7265616479206c61756e636865604482015261642160f01b60648201526084016104b7565b60038054600160ff1991821681179092556005805490911690911790554260028190556112ce9082611a6a565b60045550565b6000546001600160a01b0316331461132e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b7565b600081815260076020526040902054819060ff16151560011461135057600080fd5b6000818152600760208190526040909120015460ff161561137057600080fd5b6000828152600760205260409020600481015460ff1615156001146113fd5760405162461bcd60e51b815260206004820152602960248201527f546f6b656e50726556657374696e673a2076657374696e67206973206e6f742060448201527f7265766f6361626c65000000000000000000000000000000000000000000000060648201526084016104b7565b6040805161014081018252825460ff808216151583526001600160a01b0361010092839004166020840152600185015493830193909352600284015460608301526003840154608083015260048401548316151560a0830152600584015460c0830152600684015460e08301526007840154909216151591810191909152600882015461012082015260009061149290611a76565b905080156114a4576114a48482610bad565b60006114c183600601548460050154611b8490919063ffffffff16565b6008549091506114d19082611b84565b6008555050600701805460ff191660011790555050565b60055460ff161561154a5760405162461bcd60e51b815260206004820152602660248201527f496e636f6d696e67206465706f736974732068617665206265656e2066696e616044820152653634b9b2b21760d11b60648201526084016104b7565b6000546001600160a01b031633146115a45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b7565b8a871480156115b257508685145b80156115bd57508483145b80156115c95750815183145b6115ef5760405162461bcd60e51b815260206004820152600060248201526044016104b7565b60005b8b8110156116e1576116cf8d8d8381811061160f5761160f612241565b90506020020160208101906116249190611ea9565b8c8c8481811061163657611636612241565b905060200201358b8b8581811061164f5761164f612241565b905060200201358a8a8681811061166857611668612241565b9050602002013589898781811061168157611681612241565b90506020020160208101906116969190612257565b8887815181106116a8576116a8612241565b60200260200101518888815181106116c2576116c2612241565b6020026020010151610652565b806116d981612274565b9150506115f2565b50505050505050505050505050565b600081815260076020526040812054829060ff16151560011461171257600080fd5b6000818152600760208190526040909120015460ff161561173257600080fd5b600083815260076020818152604092839020835161014081018552815460ff808216151583526001600160a01b03610100928390041694830194909452600183015495820195909552600282015460608201526003820154608082015260048201548316151560a0820152600582015460c0820152600682015460e08201529281015490911615159282019290925260088201546101208201526117d590611a76565b949350505050565b6000546001600160a01b031633146118375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b7565b6001600160a01b0381166118b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104b7565b6118bc81611b90565b50565b61192460405180610140016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600015158152602001600081525090565b60408051606085901b6bffffffffffffffffffffffff19166020808301919091526034808301869052835180840390910181526054909201909252805191012061196d906110e5565b9392505050565b600061197f60065490565b82106119d95760405162461bcd60e51b8152602060048201526024808201527f546f6b656e50726556657374696e673a20696e646578206f7574206f6620626f604482015263756e647360e01b60648201526084016104b7565b600682815481106119ec576119ec612241565b90600052602060002001549050919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052611a65908490611bf8565b505050565b600061196d828461228f565b60035460009060ff16611a8b57506000919050565b6000611a96600a5490565b9050611ab18360400151600454611a6a90919063ffffffff16565b811080611ac5575061010083015115156001145b15611ad35750600092915050565b6060830151600454611ae491611a6a565b8110611afd5760e083015160c084015161196d91611b84565b6000611b1460045483611b8490919063ffffffff16565b60808501519091506000611b288383611cdd565b90506000611b368284611ce9565b90506000611b5f8860600151611b59848b60c00151611ce990919063ffffffff16565b90611cdd565b9050611b788860e0015182611b8490919063ffffffff16565b98975050505050505050565b600061196d828461222a565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611c4d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611cf59092919063ffffffff16565b805190915015611a655780806020019051810190611c6b91906122a7565b611a655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104b7565b600061196d82846122c4565b600061196d82846122e6565b60606117d5848460008585843b611d4e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104b7565b600080866001600160a01b03168587604051611d6a9190612335565b60006040518083038185875af1925050503d8060008114611da7576040519150601f19603f3d011682016040523d82523d6000602084013e611dac565b606091505b5091509150611dbc828286611dc7565b979650505050505050565b60608315611dd657508161196d565b825115611de65782518084602001fd5b8160405162461bcd60e51b81526004016104b79190612351565b600060208284031215611e1257600080fd5b5035919050565b80356001600160a01b0381168114611e3057600080fd5b919050565b80151581146118bc57600080fd5b600080600080600080600060e0888a031215611e5e57600080fd5b611e6788611e19565b96506020880135955060408801359450606088013593506080880135611e8c81611e35565b9699959850939692959460a0840135945060c09093013592915050565b600060208284031215611ebb57600080fd5b61196d82611e19565b60008060408385031215611ed757600080fd5b50508035926020909101359150565b81511515815261014081016020830151611f0b60208401826001600160a01b03169052565b5060408301516040830152606083015160608301526080830151608083015260a0830151611f3d60a084018215159052565b5060c083015160c083015260e083015160e083015261010080840151611f668285018215159052565b505061012092830151919092015290565b60008060408385031215611f8a57600080fd5b611f9383611e19565b946020939093013593505050565b60008083601f840112611fb357600080fd5b50813567ffffffffffffffff811115611fcb57600080fd5b6020830191508360208260051b8501011115611fe657600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261201457600080fd5b8135602067ffffffffffffffff8083111561203157612031611fed565b8260051b604051601f19603f8301168101818110848211171561205657612056611fed565b60405293845285810183019383810192508785111561207457600080fd5b83870191505b84821015611dbc5781358352918301919083019061207a565b60008060008060008060008060008060008060e08d8f0312156120b557600080fd5b67ffffffffffffffff8d3511156120cb57600080fd5b6120d88e8e358f01611fa1565b909c509a5067ffffffffffffffff60208e013511156120f657600080fd5b6121068e60208f01358f01611fa1565b909a50985067ffffffffffffffff60408e0135111561212457600080fd5b6121348e60408f01358f01611fa1565b909850965067ffffffffffffffff60608e0135111561215257600080fd5b6121628e60608f01358f01611fa1565b909650945067ffffffffffffffff60808e0135111561218057600080fd5b6121908e60808f01358f01611fa1565b909450925067ffffffffffffffff60a08e013511156121ae57600080fd5b6121be8e60a08f01358f01612003565b915067ffffffffffffffff60c08e013511156121d957600080fd5b6121e98e60c08f01358f01612003565b90509295989b509295989b509295989b565b60006020828403121561220d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561223c5761223c612214565b500390565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561226957600080fd5b813561196d81611e35565b600060001982141561228857612288612214565b5060010190565b600082198211156122a2576122a2612214565b500190565b6000602082840312156122b957600080fd5b815161196d81611e35565b6000826122e157634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561230057612300612214565b500290565b60005b83811015612320578181015183820152602001612308565b8381111561232f576000848401525b50505050565b60008251612347818460208701612305565b9190910192915050565b6020815260008251806020840152612370816040850160208701612305565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a";

type MockTokenPreVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTokenPreVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTokenPreVesting__factory extends ContractFactory {
  constructor(...args: MockTokenPreVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockTokenPreVesting";
  }

  deploy(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockTokenPreVesting> {
    return super.deploy(
      token_,
      overrides || {}
    ) as Promise<MockTokenPreVesting>;
  }
  getDeployTransaction(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, overrides || {});
  }
  attach(address: string): MockTokenPreVesting {
    return super.attach(address) as MockTokenPreVesting;
  }
  connect(signer: Signer): MockTokenPreVesting__factory {
    return super.connect(signer) as MockTokenPreVesting__factory;
  }
  static readonly contractName: "MockTokenPreVesting";
  public readonly contractName: "MockTokenPreVesting";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenPreVestingInterface {
    return new utils.Interface(_abi) as MockTokenPreVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockTokenPreVesting {
    return new Contract(address, _abi, signerOrProvider) as MockTokenPreVesting;
  }
}
