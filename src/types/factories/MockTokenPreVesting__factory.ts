/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockTokenPreVesting,
  MockTokenPreVestingInterface,
} from "../MockTokenPreVesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Revoked",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "cliff",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "computeNextVestingScheduleIdForHolder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "computeReleasableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "computeVestingScheduleIdForAddressAndIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_slicePeriodSeconds",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_revocable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "createVestingSchedule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_beneficiaries",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_durations",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_slicePeriodSeconds",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "_revocables",
        type: "bool[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "createVestingSchedule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "getLastVestingScheduleForHolder",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
        ],
        internalType: "struct TokenPreVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getVestingIdAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "getVestingSchedule",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
        ],
        internalType: "struct TokenPreVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getVestingScheduleByAddressAndIndex",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "address",
            name: "beneficiary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slicePeriodSeconds",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
        ],
        internalType: "struct TokenPreVesting.VestingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVestingSchedulesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "getVestingSchedulesCountByBeneficiary",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVestingSchedulesTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWithdrawableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "launchTimestampset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "vestingScheduleId",
        type: "bytes32",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "setCurrentTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cliff",
        type: "uint256",
      },
    ],
    name: "setLaunchTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405260006009553480156200001657600080fd5b506040516200230a3803806200230a833981016040819052620000399162000116565b806200004533620000c6565b600180556001600160a01b038116620000b35760405162461bcd60e51b815260206004820152602660248201527f546f6b656e50726556657374696e673a20746f6b656e2061646472657373206960448201526573207a65726f60d01b606482015260840160405180910390fd5b6001600160a01b03166080525062000148565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200012957600080fd5b81516001600160a01b03811681146200014157600080fd5b9392505050565b60805161219162000179600039600081816101d401528181610840015281816112d9015261148e01526121916000f3fe6080604052600436106101825760003560e01c80637e913dc6116100d5578063be9a655511610084578063f2fde38b11610061578063f2fde38b146105af578063f51321d7146105cf578063f7c469f0146105ef578063f9079b371461066457005b8063be9a65551461054f578063cf6e7fd814610565578063ea1bb3d51461058f57005b806390be10cc116100b257806390be10cc1461043c5780639ef346b414610451578063b75c7dc61461052f57005b80637e913dc61461032c5780638af104da146103bc5780638da5cb5b1461041e57005b806348deb4711161013157806362fc451a1161010e57806362fc451a146102d757806366afd8ef146102f7578063715018a61461031757005b806348deb4711461026c5780635a7bb69a146102815780635d46b8eb146102b757005b806322f8e5661161015f57806322f8e5661461020c5780632e1a7d4d1461022c57806338f5e76f1461024c57005b8063130836171461018b57806313d033c0146101af57806321df0da7146101c557005b3661018957005b005b34801561019757600080fd5b506005545b6040519081526020015b60405180910390f35b3480156101bb57600080fd5b5061019c60035481565b3480156101d157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016101a6565b34801561021857600080fd5b50610189610227366004611dc4565b600955565b34801561023857600080fd5b50610189610247366004611dc4565b610684565b34801561025857600080fd5b50610189610267366004611e07565b61086e565b34801561027857600080fd5b5060075461019c565b34801561028d57600080fd5b5061019c61029c366004611e57565b6001600160a01b031660009081526008602052604090205490565b3480156102c357600080fd5b506101896102d2366004611e72565b610d89565b3480156102e357600080fd5b506101896102f2366004611ee0565b610e64565b34801561030357600080fd5b50610189610312366004611e72565b611037565b34801561032357600080fd5b5061018961130e565b34801561033857600080fd5b5061034c610347366004611e57565b611374565b6040516101a691906000610100820190508251151582526001600160a01b036020840151166020830152604083015160408301526060830151606083015260808301511515608083015260a083015160a083015260c083015160c083015260e0830151151560e083015292915050565b3480156103c857600080fd5b5061019c6103d7366004611fd1565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b34801561042a57600080fd5b506000546001600160a01b03166101f4565b34801561044857600080fd5b5061019c611467565b34801561045d57600080fd5b5061034c61046c366004611dc4565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091525060009081526006602081815260409283902083516101008082018652825460ff808216151584529190046001600160a01b031693820193909352600182015494810194909452600281015460608501526003810154821615156080850152600481015460a0850152600581015460c08501529091015416151560e082015290565b34801561053b57600080fd5b5061018961054a366004611dc4565b611513565b34801561055b57600080fd5b5061019c60045481565b34801561057157600080fd5b5060025461057f9060ff1681565b60405190151581526020016101a6565b34801561059b57600080fd5b5061019c6105aa366004611dc4565b61170d565b3480156105bb57600080fd5b506101896105ca366004611e57565b6117df565b3480156105db57600080fd5b5061034c6105ea366004611fd1565b6118c1565b3480156105fb57600080fd5b5061019c61060a366004611e57565b6001600160a01b0381166000908152600860209081526040808320548151606086901b6bffffffffffffffffffffffff19168185015260348082019290925282518082039092018252605401909152805191012092915050565b34801561067057600080fd5b5061019c61067f366004611dc4565b61194f565b600260015414156106dc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001556000546001600160a01b0316331461073b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d3565b80306001600160a01b03166390be10cc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561077557600080fd5b505afa158015610789573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ad9190611ffb565b10156108215760405162461bcd60e51b815260206004820152602e60248201527f546f6b656e50726556657374696e673a206e6f7420656e6f756768207769746860448201527f6472617761626c652066756e647300000000000000000000000000000000000060648201526084016106d3565b6108676108366000546001600160a01b031690565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690836119d9565b5060018055565b60025460ff16156108d25760405162461bcd60e51b815260206004820152602860248201527f546f6b656e50726556657374696e673a206c61756e63682074696d657374616d6044820152671c081a5cc81cd95d60c21b60648201526084016106d3565b6000546001600160a01b0316331461092c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d3565b80306001600160a01b03166390be10cc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561096657600080fd5b505afa15801561097a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099e9190611ffb565b1015610a385760405162461bcd60e51b815260206004820152604d60248201527f546f6b656e50726556657374696e673a2063616e6e6f7420637265617465207660448201527f657374696e67207363686564756c652062656361757365206e6f74207375666660648201527f696369656e7420746f6b656e7300000000000000000000000000000000000000608482015260a4016106d3565b60008411610aae5760405162461bcd60e51b815260206004820152602560248201527f546f6b656e50726556657374696e673a206475726174696f6e206d757374206260448201527f65203e203000000000000000000000000000000000000000000000000000000060648201526084016106d3565b60008111610b0a5760405162461bcd60e51b815260206004820152602360248201527f546f6b656e50726556657374696e673a20616d6f756e74206d7573742062652060448201526203e20360ec1b60648201526084016106d3565b6001831015610b815760405162461bcd60e51b815260206004820152603060248201527f546f6b656e50726556657374696e673a20736c696365506572696f645365636f60448201527f6e6473206d757374206265203e3d20310000000000000000000000000000000060648201526084016106d3565b604051630f7c469f60e41b81526001600160a01b0386166004820152600090309063f7c469f09060240160206040518083038186803b158015610bc357600080fd5b505afa158015610bd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfb9190611ffb565b60408051610100808201835260018083526001600160a01b038b811660208086019182528587018d8152606087018d81528c15156080890190815260a089018d8152600060c08b0181815260e08c018281528e83526006978890529c9091209a518b5497517fffffffffffffffffffffff0000000000000000000000000000000000000000009098169015157fffffffffffffffffffffff0000000000000000000000000000000000000000ff161796909716909802949094178855905194870194909455925160028601555160038501805460ff19908116921515929092179055925160048501555160058401559251919092018054909216901515179055600754909150610d0b9083611a45565b6007556005805460018181019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018290556001600160a01b03871660009081526008602052604090205490610d64908290611a45565b6001600160a01b03909716600090815260086020526040902096909655505050505050565b6000546001600160a01b03163314610de35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d3565b60025460ff1615610e415760405162461bcd60e51b815260206004820152602260248201527f546f6b656e50726556657374696e673a20616c7265616479206c61756e636865604482015261642160f01b60648201526084016106d3565b6002805460ff191660011790556004829055610e5d8282611a45565b6003555050565b60025460ff1615610ec85760405162461bcd60e51b815260206004820152602860248201527f546f6b656e50726556657374696e673a206c61756e63682074696d657374616d6044820152671c081a5cc81cd95d60c21b60648201526084016106d3565b6000546001600160a01b03163314610f225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d3565b8887148015610f3057508685145b8015610f3b57508483145b8015610f4657508281145b610f6c5760405162461bcd60e51b815260206004820152600060248201526044016106d3565b60005b8981101561102a576110188b8b83818110610f8c57610f8c612014565b9050602002016020810190610fa19190611e57565b8a8a84818110610fb357610fb3612014565b90506020020135898985818110610fcc57610fcc612014565b90506020020135888886818110610fe557610fe5612014565b9050602002016020810190610ffa919061202a565b87878781811061100c5761100c612014565b9050602002013561086e565b806110228161205d565b915050610f6f565b5050505050505050505050565b6002600154141561108a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106d3565b60026001908155600083815260066020526040902054839160ff9091161515146110b357600080fd5b6000818152600660208190526040909120015460ff16156110d357600080fd5b6000838152600660205260408120805491549091336001600160a01b036101009092048216811492919091161481806111095750805b6111a15760405162461bcd60e51b815260206004820152604560248201527f546f6b656e50726556657374696e673a206f6e6c792062656e6566696369617260448201527f7920616e64206f776e65722063616e2072656c6561736520766573746564207460648201527f6f6b656e73000000000000000000000000000000000000000000000000000000608482015260a4016106d3565b604080516101008082018352855460ff808216151584529190046001600160a01b03166020830152600186015492820192909252600285015460608201526003850154821615156080820152600485015460a0820152600585015460c08201526006850154909116151560e082015260009061121c90611a51565b905085811015611296576040805162461bcd60e51b81526020600482015260248101919091527f546f6b656e50726556657374696e673a2063616e6e6f742072656c656173652060448201527f746f6b656e732c206e6f7420656e6f7567682076657374656420746f6b656e7360648201526084016106d3565b60058401546112a59087611a45565b600585015583546007546101009091046001600160a01b0316906112c99088611b48565b6007556113006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682896119d9565b505060018055505050505050565b6000546001600160a01b031633146113685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d3565b6113726000611b54565b565b604080516101008101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905260e083018290526001600160a01b0385168252600890529182205490916006916113e09085906103d790600190612078565b8152602080820192909252604090810160002081516101008082018452825460ff808216151584529190046001600160a01b031694820194909452600182015492810192909252600281015460608301526003810154831615156080830152600481015460a0830152600581015460c083015260060154909116151560e082015292915050565b6007546040516370a0823160e01b815230600482015260009161150e916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b1580156114d057600080fd5b505afa1580156114e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115089190611ffb565b90611b48565b905090565b6000546001600160a01b0316331461156d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d3565b600081815260066020526040902054819060ff16151560011461158f57600080fd5b6000818152600660208190526040909120015460ff16156115af57600080fd5b6000828152600660205260409020600381015460ff16151560011461163c5760405162461bcd60e51b815260206004820152602960248201527f546f6b656e50726556657374696e673a2076657374696e67206973206e6f742060448201527f7265766f6361626c65000000000000000000000000000000000000000000000060648201526084016106d3565b604080516101008082018352835460ff808216151584529190046001600160a01b03166020830152600184015492820192909252600283015460608201526003830154821615156080820152600483015460a0820152600583015460c08201526006830154909116151560e08201526000906116b790611a51565b905080156116c9576116c98482611037565b60006116e683600501548460040154611b4890919063ffffffff16565b6007549091506116f69082611b48565b6007555050600601805460ff191660011790555050565b600081815260066020526040812054829060ff16151560011461172f57600080fd5b6000818152600660208190526040909120015460ff161561174f57600080fd5b60008381526006602081815260409283902083516101008082018652825460ff808216151584529190046001600160a01b031693820193909352600182015494810194909452600281015460608501526003810154821615156080850152600481015460a0850152600581015460c08501529182015416151560e0830152906117d790611a51565b949350505050565b6000546001600160a01b031633146118395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d3565b6001600160a01b0381166118b55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106d3565b6118be81611b54565b50565b60408051610100810182526000808252602080830182905282840182905260608084018390526080840183905260a0840183905260c0840183905260e084019290925283519186901b6bffffffffffffffffffffffff191682820152603480830186905284518084039091018152605490920190935280519201919091206119489061046c565b9392505050565b600061195a60055490565b82106119b45760405162461bcd60e51b8152602060048201526024808201527f546f6b656e50726556657374696e673a20696e646578206f7574206f6620626f604482015263756e647360e01b60648201526084016106d3565b600582815481106119c7576119c7612014565b90600052602060002001549050919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052611a40908490611bbc565b505050565b6000611948828461208f565b60025460009060ff16611a6657506000919050565b6000611a7160095490565b9050600354811080611a89575060e083015115156001145b15611a975750600092915050565b6040830151600454611aa891611a45565b8110611ac15760c083015160a084015161194891611b48565b6000611ad860045483611b4890919063ffffffff16565b60608501519091506000611aec8383611ca1565b90506000611afa8284611cad565b90506000611b238860400151611b1d848b60a00151611cad90919063ffffffff16565b90611ca1565b9050611b3c8860c0015182611b4890919063ffffffff16565b98975050505050505050565b60006119488284612078565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611c11826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611cb99092919063ffffffff16565b805190915015611a405780806020019051810190611c2f91906120a7565b611a405760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106d3565b600061194882846120c4565b600061194882846120e6565b60606117d7848460008585843b611d125760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106d3565b600080866001600160a01b03168587604051611d2e9190612135565b60006040518083038185875af1925050503d8060008114611d6b576040519150601f19603f3d011682016040523d82523d6000602084013e611d70565b606091505b5091509150611d80828286611d8b565b979650505050505050565b60608315611d9a575081611948565b825115611daa5782518084602001fd5b8160405162461bcd60e51b81526004016106d39190612151565b600060208284031215611dd657600080fd5b5035919050565b80356001600160a01b0381168114611df457600080fd5b919050565b80151581146118be57600080fd5b600080600080600060a08688031215611e1f57600080fd5b611e2886611ddd565b945060208601359350604086013592506060860135611e4681611df9565b949793965091946080013592915050565b600060208284031215611e6957600080fd5b61194882611ddd565b60008060408385031215611e8557600080fd5b50508035926020909101359150565b60008083601f840112611ea657600080fd5b50813567ffffffffffffffff811115611ebe57600080fd5b6020830191508360208260051b8501011115611ed957600080fd5b9250929050565b60008060008060008060008060008060a08b8d031215611eff57600080fd5b8a3567ffffffffffffffff80821115611f1757600080fd5b611f238e838f01611e94565b909c509a5060208d0135915080821115611f3c57600080fd5b611f488e838f01611e94565b909a50985060408d0135915080821115611f6157600080fd5b611f6d8e838f01611e94565b909850965060608d0135915080821115611f8657600080fd5b611f928e838f01611e94565b909650945060808d0135915080821115611fab57600080fd5b50611fb88d828e01611e94565b915080935050809150509295989b9194979a5092959850565b60008060408385031215611fe457600080fd5b611fed83611ddd565b946020939093013593505050565b60006020828403121561200d57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561203c57600080fd5b813561194881611df9565b634e487b7160e01b600052601160045260246000fd5b600060001982141561207157612071612047565b5060010190565b60008282101561208a5761208a612047565b500390565b600082198211156120a2576120a2612047565b500190565b6000602082840312156120b957600080fd5b815161194881611df9565b6000826120e157634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561210057612100612047565b500290565b60005b83811015612120578181015183820152602001612108565b8381111561212f576000848401525b50505050565b60008251612147818460208701612105565b9190910192915050565b6020815260008251806020840152612170816040850160208701612105565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a";

type MockTokenPreVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTokenPreVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTokenPreVesting__factory extends ContractFactory {
  constructor(...args: MockTokenPreVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockTokenPreVesting";
  }

  deploy(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockTokenPreVesting> {
    return super.deploy(
      token_,
      overrides || {}
    ) as Promise<MockTokenPreVesting>;
  }
  getDeployTransaction(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, overrides || {});
  }
  attach(address: string): MockTokenPreVesting {
    return super.attach(address) as MockTokenPreVesting;
  }
  connect(signer: Signer): MockTokenPreVesting__factory {
    return super.connect(signer) as MockTokenPreVesting__factory;
  }
  static readonly contractName: "MockTokenPreVesting";
  public readonly contractName: "MockTokenPreVesting";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenPreVestingInterface {
    return new utils.Interface(_abi) as MockTokenPreVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockTokenPreVesting {
    return new Contract(address, _abi, signerOrProvider) as MockTokenPreVesting;
  }
}
