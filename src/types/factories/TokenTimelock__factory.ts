/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenTimelock, TokenTimelockInterface } from "../TokenTimelock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AllocationPerformed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensUnlocked",
    type: "event",
  },
  {
    inputs: [],
    name: "allIncomingDepositsFinalised",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "alreadyWithdrawn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "bulkDepositTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizeAllIncomingDeposits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timePeriodInSeconds",
        type: "uint256",
      },
    ],
    name: "setTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timestampSet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAccidentallyLockedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferTimeLockedTokensAfterTimePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001bfb38038062001bfb83398101604081905262000034916200012c565b6200003f33620000dc565b6001600160a01b038116620000b25760405162461bcd60e51b815260206004820152602f60248201527f5f65726332305f636f6e74726163745f6164647265737320616464726573732060448201526e63616e206e6f74206265207a65726f60881b606482015260840160405180910390fd5b6001600160a01b0316608052600080546002805460ff1916905561ffff60a01b191690556200015e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200013f57600080fd5b81516001600160a01b03811681146200015757600080fd5b9392505050565b608051611a7a620001816000396000818161075c0152610a910152611a7a6000f3fe6080604052600436106101125760003560e01c80638b7afe2e116100a5578063a0a2b57311610074578063d148429811610059578063d1484298146103ac578063d6d14171146103cc578063f2fde38b146103e257600080fd5b8063a0a2b5731461036c578063c311d0491461038c57600080fd5b80638b7afe2e146102e75780638da5cb5b146102fd5780639aa2e39e146103255780639b69279a1461035257600080fd5b80633e994942116100e15780633e9949421461026157806355ce38661461028157806366168bd7146102b2578063715018a6146102d257600080fd5b806302cc6e3f146101d4578063199b6bba146101eb57806327e235e31461020b5780633e79d1e11461024b57600080fd5b366101cf57600054600160a81b900460ff16156101855760405162461bcd60e51b815260206004820152602660248201527f496e636f6d696e67206465706f736974732068617665206265656e2066696e616044820152653634b9b2b21760d11b60648201526084015b60405180910390fd5b6006546101929034610402565b600655604080513381523460208201527f59062170a285eb80e8c6b8ced60428442a51910635005233fc4ce084a475845e910160405180910390a1005b600080fd5b3480156101e057600080fd5b506101e9610415565b005b3480156101f757600080fd5b506101e96102063660046117fb565b61051e565b34801561021757600080fd5b5061023861022636600461183c565b60056020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561025757600080fd5b5061023860035481565b34801561026d57600080fd5b506101e961027c366004611859565b610981565b34801561028d57600080fd5b506000546102a290600160a81b900460ff1681565b6040519015158152602001610242565b3480156102be57600080fd5b506101e96102cd366004611859565b610b82565b3480156102de57600080fd5b506101e9610d94565b3480156102f357600080fd5b5061023860065481565b34801561030957600080fd5b506000546040516001600160a01b039091168152602001610242565b34801561033157600080fd5b5061023861034036600461183c565b60046020526000908152604090205481565b34801561035e57600080fd5b506002546102a29060ff1681565b34801561037857600080fd5b506101e9610387366004611885565b610dfa565b34801561039857600080fd5b506101e96103a7366004611885565b610ed8565b3480156103b857600080fd5b506101e96103c73660046118ea565b61101f565b3480156103d857600080fd5b5061023860015481565b3480156103ee57600080fd5b506101e96103fd36600461183c565b6113b0565b600061040e828461196c565b9392505050565b60025460ff1615156001146104855760405162461bcd60e51b815260206004820152603060248201527f506c6561736520736574207468652074696d65207374616d702066697273742c60448201526f103a3432b7103a393c9030b3b0b4b71760811b606482015260840161017c565b600054600160a81b900460ff16156104ee5760405162461bcd60e51b815260206004820152602660248201527f496e636f6d696e67206465706f736974732068617665206265656e2066696e616044820152653634b9b2b21760d11b606482015260840161017c565b600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b179055565b60025460ff16151560011461058e5760405162461bcd60e51b815260206004820152603060248201527f506c6561736520736574207468652074696d65207374616d702066697273742c60448201526f103a3432b7103a393c9030b3b0b4b71760811b606482015260840161017c565b600054600160a01b900460ff16156105d95760405162461bcd60e51b815260206004820152600e60248201526d4e6f2072652d656e7472616e637960901b604482015260640161017c565b6000805460ff60a01b1916600160a01b1790556001600160a01b03821661064e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161017c565b6001600160a01b0382166000908152600560205260409020548111156106dc5760405162461bcd60e51b815260206004820152602d60248201527f496e73756666696369656e7420746f6b656e2062616c616e63652c207472792060448201527f6c657373657220616d6f756e7400000000000000000000000000000000000000606482015260840161017c565b336001600160a01b0383161461075a5760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792074686520746f6b656e20726563697069656e742063616e2070657260448201527f666f726d2074686520756e6c6f636b0000000000000000000000000000000000606482015260840161017c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316146108355760405162461bcd60e51b8152602060048201526064602482018190527f546f6b656e20706172616d65746572206d757374206265207468652073616d6560448301527f2061732074686520657263323020636f6e747261637420616464726573732077908201527f68696368207761732070617373656420696e746f2074686520636f6e7374727560848201526331ba37b960e11b60a482015260c40161017c565b6003544210610901576001600160a01b0382166000908152600460205260409020546108619082610402565b6001600160a01b0383166000908152600460209081526040808320939093556005905220546108909082611492565b6001600160a01b038084166000908152600560205260409020919091556108ba908416838361149e565b604080516001600160a01b0384168152602081018390527fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888910160405180910390a161096f565b60405162461bcd60e51b815260206004820152603f60248201527f546f6b656e7320617265206f6e6c7920617661696c61626c652061667465722060448201527f636f72726563742074696d6520706572696f642068617320656c617073656400606482015260840161017c565b50506000805460ff60a01b1916905550565b6000546001600160a01b031633146109db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017c565b600054600160a01b900460ff1615610a265760405162461bcd60e51b815260206004820152600e60248201526d4e6f2072652d656e7472616e637960901b604482015260640161017c565b6000805460ff60a01b1916600160a01b1790556001600160a01b038216610a8f5760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e20616464726573732063616e206e6f74206265207a65726f000000604482015260640161017c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415610b5d5760405162461bcd60e51b815260206004820152604c60248201527f546f6b656e20616464726573732063616e206e6f74206265204552433230206160448201527f646472657373207768696368207761732070617373656420696e746f2074686560648201527f20636f6e7374727563746f720000000000000000000000000000000000000000608482015260a40161017c565b610b716001600160a01b038316338361149e565b50506000805460ff60a01b19169055565b6000546001600160a01b03163314610bdc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017c565b60025460ff161515600114610c4c5760405162461bcd60e51b815260206004820152603060248201527f506c6561736520736574207468652074696d65207374616d702066697273742c60448201526f103a3432b7103a393c9030b3b0b4b71760811b606482015260840161017c565b600054600160a81b900460ff1615610cb55760405162461bcd60e51b815260206004820152602660248201527f496e636f6d696e67206465706f736974732068617665206265656e2066696e616044820152653634b9b2b21760d11b606482015260840161017c565b6001600160a01b038216610d175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161017c565b6001600160a01b038216600090815260056020526040902054610d3a9082610402565b6001600160a01b0383166000818152600560209081526040918290209390935580519182529181018390527fcad22dd3bcdad18c651a372fe3e7e893af3d354482d9ac6c310c8342eb7af574910160405180910390a15050565b6000546001600160a01b03163314610dee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017c565b610df8600061150a565b565b6000546001600160a01b03163314610e545760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017c565b60025460ff1615610eb35760405162461bcd60e51b8152602060048201526024808201527f5468652074696d65207374616d702068617320616c7265616479206265656e2060448201526339b2ba1760e11b606482015260840161017c565b6002805460ff191660019081179091554290819055610ed29082610402565b60035550565b6000546001600160a01b03163314610f325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017c565b600054600160a01b900460ff1615610f7d5760405162461bcd60e51b815260206004820152600e60248201526d4e6f2072652d656e7472616e637960901b604482015260640161017c565b6000805460ff60a01b1916600160a01b179055600654811115610fe25760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742066756e64730000000000000000000000000000604482015260640161017c565b600654610fef9082611492565b600655604051339082156108fc029083906000818181858888f19350505050158015610b71573d6000803e3d6000fd5b6000546001600160a01b031633146110795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017c565b60025460ff1615156001146110e95760405162461bcd60e51b815260206004820152603060248201527f506c6561736520736574207468652074696d65207374616d702066697273742c60448201526f103a3432b7103a393c9030b3b0b4b71760811b606482015260840161017c565b600054600160a81b900460ff16156111525760405162461bcd60e51b815260206004820152602660248201527f496e636f6d696e67206465706f736974732068617665206265656e2066696e616044820152653634b9b2b21760d11b606482015260840161017c565b8281146111d15760405162461bcd60e51b815260206004820152604160248201527f54686520726563697069656e747320616e6420616d6f756e747320617272617960448201527f73206d757374206265207468652073616d652073697a6520696e206c656e67746064820152600d60fb1b608482015260a40161017c565b60005b838110156113a95760008585838181106111f0576111f0611984565b9050602002016020810190611205919061183c565b6001600160a01b031614156112685760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161017c565b6112cf83838381811061127d5761127d611984565b905060200201356005600088888681811061129a5761129a611984565b90506020020160208101906112af919061183c565b6001600160a01b0316815260208101919091526040016000205490610402565b600560008787858181106112e5576112e5611984565b90506020020160208101906112fa919061183c565b6001600160a01b031681526020810191909152604001600020557fcad22dd3bcdad18c651a372fe3e7e893af3d354482d9ac6c310c8342eb7af57485858381811061134757611347611984565b905060200201602081019061135c919061183c565b84848481811061136e5761136e611984565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a1806113a18161199a565b9150506111d4565b5050505050565b6000546001600160a01b0316331461140a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161017c565b6001600160a01b0381166114865760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161017c565b61148f8161150a565b50565b600061040e82846119b5565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052611505908490611572565b505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006115c7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116579092919063ffffffff16565b80519091501561150557808060200190518101906115e591906119cc565b6115055760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161017c565b6060611666848460008561166e565b949350505050565b6060824710156116e65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161017c565b843b6117345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161017c565b600080866001600160a01b031685876040516117509190611a1e565b60006040518083038185875af1925050503d806000811461178d576040519150601f19603f3d011682016040523d82523d6000602084013e611792565b606091505b50915091506117a28282866117ad565b979650505050505050565b606083156117bc57508161040e565b8251156117cc5782518084602001fd5b8160405162461bcd60e51b815260040161017c9190611a3a565b6001600160a01b038116811461148f57600080fd5b60008060006060848603121561181057600080fd5b833561181b816117e6565b9250602084013561182b816117e6565b929592945050506040919091013590565b60006020828403121561184e57600080fd5b813561040e816117e6565b6000806040838503121561186c57600080fd5b8235611877816117e6565b946020939093013593505050565b60006020828403121561189757600080fd5b5035919050565b60008083601f8401126118b057600080fd5b50813567ffffffffffffffff8111156118c857600080fd5b6020830191508360208260051b85010111156118e357600080fd5b9250929050565b6000806000806040858703121561190057600080fd5b843567ffffffffffffffff8082111561191857600080fd5b6119248883890161189e565b9096509450602087013591508082111561193d57600080fd5b5061194a8782880161189e565b95989497509550505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561197f5761197f611956565b500190565b634e487b7160e01b600052603260045260246000fd5b60006000198214156119ae576119ae611956565b5060010190565b6000828210156119c7576119c7611956565b500390565b6000602082840312156119de57600080fd5b8151801515811461040e57600080fd5b60005b83811015611a095781810151838201526020016119f1565b83811115611a18576000848401525b50505050565b60008251611a308184602087016119ee565b9190910192915050565b6020815260008251806020840152611a598160408501602087016119ee565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a";

type TokenTimelockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenTimelockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenTimelock__factory extends ContractFactory {
  constructor(...args: TokenTimelockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TokenTimelock";
  }

  deploy(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenTimelock> {
    return super.deploy(token_, overrides || {}) as Promise<TokenTimelock>;
  }
  getDeployTransaction(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, overrides || {});
  }
  attach(address: string): TokenTimelock {
    return super.attach(address) as TokenTimelock;
  }
  connect(signer: Signer): TokenTimelock__factory {
    return super.connect(signer) as TokenTimelock__factory;
  }
  static readonly contractName: "TokenTimelock";
  public readonly contractName: "TokenTimelock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenTimelockInterface {
    return new utils.Interface(_abi) as TokenTimelockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenTimelock {
    return new Contract(address, _abi, signerOrProvider) as TokenTimelock;
  }
}
